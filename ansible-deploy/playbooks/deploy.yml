---
- name: Deploy Finance Tracker containers (Backend + Frontend + Monitoring)
  hosts: finance-host
  become: true

  tasks:
    - name: Check if Docker is installed
      command: which docker
      register: docker_check
      ignore_errors: yes

    - name: Install Docker only if not present
      shell: curl -fsSL https://get.docker.com | sh
      when: docker_check.rc != 0

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: true

    # BACKEND
    - name: Pull backend image from DockerHub
      command: docker pull jerin07/finance-tracker:latest

    - name: Stop existing backend container (if any)
      shell: |
        docker ps -q --filter "name=finance-tracker" | xargs -r docker stop
        docker ps -aq --filter "name=finance-tracker" | xargs -r docker rm

    - name: Run the backend container
      command: docker run -d --name finance-tracker -p 9191:8080 jerin07/finance-tracker:latest

    # FRONTEND
    - name: Pull frontend image from DockerHub
      command: docker pull jerin07/finance-frontend:latest

    - name: Stop existing frontend container (if any)
      shell: |
        docker ps -q --filter "name=finance-frontend" | xargs -r docker stop
        docker ps -aq --filter "name=finance-frontend" | xargs -r docker rm

    - name: Run the frontend container
      command: docker run -d --name finance-frontend -p 3000:80 jerin07/finance-frontend:latest

    # MONITORING
    - name: Get current user
      command: whoami
      register: current_user

    - name: Create monitoring directory
      file:
        path: /home/{{ current_user.stdout }}/monitoring
        state: directory
        mode: '0755'

    - name: Copy monitoring content (docker-compose + provisioning)
      copy:
        src: files/monitoring/
        dest: /home/{{ current_user.stdout }}/monitoring/
        mode: '0755'

    - name: Run monitoring containers (Grafana + Graphite)
      shell: docker-compose up -d
      args:
        chdir: /home/{{ current_user.stdout }}/monitoring

